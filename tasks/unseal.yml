---
- name: Unsealing the Vault leader.
  uri:
    url: '{% if vault_tls | bool %}https{% else %}http{% endif %}://{{ ansible_default_ipv4.address }}:{{ vault_port_arg.api }}/v1/sys/unseal'
    method: 'PUT'
    timeout: '30'
    body: '{"key":"{{ vault_init_key[item|int] }}"}'
    body_format: 'json'
    status_code: '200'
    headers:
      X-Requested-By: '{{ ansible_default_ipv4.address }}'
      cache-control: 'no-cache'
    validate_certs: 'no'
  environment:
    no_proxy: '{{ ansible_default_ipv4.address }}'
  loop: "{{ range(0, 2 + 1, 1)|list }}"
  register: vault_unseal_status
  until: vault_unseal_status.status == 200
  retries: 3
  delay: 2
  no_log: true
  when: vault_servers[0] in ansible_default_ipv4.address

- name: Unsealing the Vault followers.
  uri:
    url: '{% if vault_tls | bool %}https{% else %}http{% endif %}://{{ item.1 }}:{{ vault_port_arg.api }}/v1/sys/unseal'
    method: 'PUT'
    timeout: '30'
    body: '{"key":"{{ vault_init_key[item.0|int] }}"}'
    body_format: 'json'
    status_code: '200'
    headers:
      X-Requested-By: '{{ item.1 }}'
      cache-control: 'no-cache'
    validate_certs: 'no'
  environment:
    no_proxy: '{{ item.1 }}'
  loop: "{{ ( range(play_hosts.index(inventory_hostname) * 3, play_hosts.index(inventory_hostname) * 3 + 2 + 1, 1 ) | list ) | zip ( vault_servers ) | list }}"
  loop_control:
    pause: 5
  register: vault_unseal_status
  until: vault_unseal_status.status == 200
  retries: 3
  delay: 2
#  no_log: true
#  when: vault_servers[0] not in ansible_default_ipv4.address
